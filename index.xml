<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sébastien Deleuze</title><link>https://seb.deleuze.fr/</link><description>Recent content on Sébastien Deleuze</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 20 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://seb.deleuze.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>How WebAssembly could impact the future of programming languages</title><link>https://seb.deleuze.fr/posts/webassembly-impact-on-programming-languages/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://seb.deleuze.fr/posts/webassembly-impact-on-programming-languages/</guid><description>First some context: WebAssembly Component Model (WIT) is maturing in order to standardize reusable components. When ready, WIT components will likely be published in a repository (like npm or Maven Central but for Wasm) in a polyglot fashion targeting any language that supports Wasm.
Wasi (the Posix of WebAssembly that allows to use it outside of the browser) is currently rebased on top of WIT (tentatively called Wasi Preview 2). With Wasi, Wasm could become a major way to deploy workloads on Edge and Cloud platforms.</description></item></channel></rss>